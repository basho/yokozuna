%% -*- erlang -*-
%% @doc To enable Search set this 'on'.
{mapping, "search", "yokozuna.enabled", [
  {default, off},
  {datatype, flag}
]}.

%% @doc How long Riak will wait for Solr to start. The start sequence
%% will be tried twice. If both attempts timeout, then the Riak node
%% will be shutdown. This may need to be increased as more data is
%% indexed and Solr takes longer to start. Values lower than 1s will
%% be rounded up to the minimum 1s.
{mapping, "search.solr.start_timeout", "yokozuna.solr_startup_wait", [
  {default, "30s"},
  {datatype, {duration, s}}
]}.

%% @doc The port number which Solr binds to.
%%   NOTE: Binds on every interface.
{mapping, "search.solr.port", "yokozuna.solr_port", [
  {default, {{yz_solr_port}} },
  {datatype, integer}
]}.

%% @doc The port number which Solr JMX binds to.
%%   NOTE: Binds on every interface.
{mapping, "search.solr.jmx_port", "yokozuna.solr_jmx_port", [
  {default, {{yz_solr_jmx_port}} },
  {datatype, integer}
]}.

%% @doc The options to pass to the Solr JVM.  Non-standard options,
%% i.e. -XX, may not be portable across JVM implementations.
%% E.g. -XX:+UseCompressedStrings
{mapping, "search.solr.jvm_options", "yokozuna.solr_jvm_opts", [
  {default, "-d64 -Xms1g -Xmx1g -XX:+UseStringCache -XX:+UseCompressedOops"}
]}.

%% @doc The directory where Search's Active Anti-Entropy data files
%% are stored
{mapping, "search.anti_entropy.data_dir", "yokozuna.anti_entropy_data_dir", [
  {default, "$(platform_data_dir)/yz_anti_entropy"},
  {datatype, directory},
  hidden
]}.

%% @doc The root directory for Search, under which index data and
%% configuration is stored.
{mapping, "search.root_dir", "yokozuna.root_dir", [
  {default, "$(platform_data_dir)/yz"},
  {datatype, directory},
  hidden
]}.

%% @doc The temp directory for Search, under which the Solr webapp
%% will be expanded and other temp data stored.
{mapping, "search.temp_dir", "yokozuna.temp_dir", [
  {default, "$(platform_data_dir)/yz_temp"},
  {datatype, directory},
  hidden
]}.

%% @doc The timeout for ibrowse (ibrowse:send_req) requests to Solr endpoints.
%% Defaults to 60 seconds. It will always round up to the nearest second, e.g.
%% 1ms = 999 ms = 1s.
{mapping, "search.solr.request_timeout", "yokozuna.solr_request_timeout", [
  {default, "60s"},
  {datatype, {duration, ms}},
  hidden
]}.

%% @doc The timeout for ibrowse (ibrowse:send_req) requests to Solr's
%% entrop_data endpoints. Defaults to 60 seconds. It will always round up to the
%% nearest second, e.g. 1ms = 999 ms = 1s.
{mapping, "search.solr.request_ed_timeout", "yokozuna.solr_request_ed_timeout", [
  {default, "60s"},
  {datatype, {duration, ms}},
  hidden
]}.

%% @doc To 'enable/disable' AAE for Search.
%%      * active: out-of-sync keys will be repaired in the background
%%      * passive: out-of-sync keys are only repaired on read
%%      * active-debug: like active, but outputs verbose debugging
%%        information
{mapping, "search.anti_entropy", "yokozuna.anti_entropy", [
  {datatype, {enum, [active, passive, 'active-debug']}},
  {default, active},
  hidden
]}.

{translation,
 "yokozuna.anti_entropy",
 fun(Conf) ->
    Setting = cuttlefish:conf_get("search.anti_entropy", Conf),
    case Setting of
      active -> {on, []};
      'active-debug' -> {on, [debug]};
      passive -> {off, []};
      _Default -> {on, []}
    end
  end
}.

%%===========================================================
%% Fuse-related settings
%%===========================================================

%% @doc The number of melts within the melt_time_window before a fuse will blow.
{mapping, "search.melt_attempts", "yokozuna.melt_attempts", [
  {default, 3},
  {datatype, integer},
  hidden,
  {validators, ["integer"]}
]}.

%% @doc The window of time in which melt_attempts melts
%%      will cause a fuse to blow.
{mapping, "search.melt_time_window", "yokozuna.melt_time_window", [
  {default, "5s"},
  {datatype, {duration, ms}},
  hidden
]}.

%% @doc The amount of elapsed time without a fuse blown event before a fuse
%%      will automatically heal.
{mapping, "search.melt_reset_refresh", "yokozuna.melt_reset_refresh", [
  {default, "30s"},
  {datatype, {duration, ms}},
  hidden
]}.

%% @doc Determins how fuse is called.
{mapping, "search.fuse_context", "yokozuna.fuse_context", [
  {default, async},
  {datatype, {flag, {sync, sync}, {async, async_dirty}}},
  hidden
]}.

%% @doc If true, then buffered data may be discarded from indices with blown
%%      fuses, if the solrq_queue_hwm is reached.
{mapping, "search.purge_blown_indices", "yokozuna.purge_blown_indices", [
  {default, on},
  {datatype, flag},
  hidden
]}.

%%===========================================================
%% Batching-related mappings for SolrQ workers
%%===========================================================

%% @doc The minimum batch size, in number of Riak objects. Any batches that
%%      are smaller than this amount will not be immediately flushed to Solr,
%%      but are guaranteed to be flushed within solrq_delayms_max milliseconds.
{mapping, "search.solrq_batch_min", "yokozuna.solrq_batch_min", [
  {default, 1},
  {datatype, integer},
  hidden,
  {validators, ["positive_integer"]}
]}.

%% @doc The maximum batch size, in number of Riak objects. Any batches that are
%%      larger than this amount will be split, where the first solrq_batch_max
%%      objects will be flushed to Solr, and the remaining objects enqueued for
%%      that index will be retained until the next batch is delivered. This
%%      parameter ensures that at most solrq_batch_max objects will be delivered
%%      into Solr in any given request.
{mapping, "search.solrq_batch_max", "yokozuna.solrq_batch_max", [
  {default, 100},
  {datatype, integer},
  hidden,
  {validators, ["positive_integer"]}
]}.

%% @doc The maximim delay between notification to flush batches to Solr. This
%%      setting is used to increase or decrease the frequency of batch delivery
%%      into Solr, specifically for relatively low-volume input into Riak. This
%%      setting ensures that data will be delivered into Solr in accordance with
%%      the solrq_batch_min and solrq_batch_max settings within the specified
%%      interval. Batches that are smaller than solrq_batch_min will be
%%      delivered to Solr within this interval. This setting will generally have
%%      no effect on heavily loaded systems.
{mapping, "search.solrq_delayms_max", "yokozuna.solrq_delayms_max", [
  {default, "1000ms"},
  {datatype, [{duration, ms}, {atom, infinity}]},
  hidden
]}.

%% @doc The queue high water mark. If the total number of queued messages in a
%%      Solrq worker instance exceed this limit, then the calling vnode will be
%%      blocked until the total number falls below this limit. This parameter
%%      exercises flow control between Riak and the Yokozuna batching subsystem,
%%      if writes into Solr start to fall behind.
{mapping, "search.solrq_queue_hwm", "yokozuna.solrq_queue_hwm", [
  {default, 10000},
  {datatype, integer},
  hidden,
  {validators, ["integer"]}
]}.

%% @doc The number of solr queue workers to instantiate in the Yokozuna
%%      application. Solr queue workers are responsible for enqueuing objects
%%      for insertion or update into Solr. Increasing the number of solrq
%%      distributes the queuing of objects, and can lead to greater throughput
%%      under high load, potentially at the expense of smaller batch sizes.
{mapping, "search.num_solrq", "yokozuna.num_solrq", [
  {default, 10},
  {datatype, integer},
  hidden,
  {validators, ["positive_integer"]}
]}.

%% @doc The number of solr queue helpers to instantiate in the Yokozuna
%%      application. Solr queue helpers are responsible for delivering batches
%%      of data into Solr. Increasing the number of solrq helpers will
%%      increase concurrent writes into Solr.
{mapping, "search.num_solrq_helpers", "yokozuna.num_solrq_helpers", [
  {default, 10},
  {datatype, integer},
  hidden,
  {validators, ["positive_integer"]}
]}.

%%===========================================================
%% Validators
%%===========================================================

{validator, "positive_integer", "must be a positive integer > 0",
  fun(X) -> X > 0 end}.

{validator, "integer", "must be an integer >= 0",
  fun(X) -> X >= 0 end}.
