%% -*- erlang -*-
%% @doc To enable Search set this 'on'.
{mapping, "search", "yokozuna.enabled", [
  {default, off},
  {datatype, flag}
]}.

%% @doc How long Riak will wait for Solr to start. The start sequence
%% will be tried twice. If both attempts timeout, then the Riak node
%% will be shutdown. This may need to be increased as more data is
%% indexed and Solr takes longer to start. Values lower than 1s will
%% be rounded up to the minimum 1s.
{mapping, "search.solr.start_timeout", "yokozuna.solr_startup_wait", [
  {default, "30s"},
  {datatype, {duration, s}}
]}.

%% @doc The port number which Solr binds to.
%%   NOTE: Binds on every interface.
{mapping, "search.solr.port", "yokozuna.solr_port", [
  {default, {{yz_solr_port}} },
  {datatype, integer}
]}.

%% @doc The port number which Solr JMX binds to.
%%   NOTE: Binds on every interface.
{mapping, "search.solr.jmx_port", "yokozuna.solr_jmx_port", [
  {default, {{yz_solr_jmx_port}} },
  {datatype, integer}
]}.

%% @doc The options to pass to the Solr JVM.  Non-standard options,
%% i.e. -XX, may not be portable across JVM implementations.
%% E.g. -XX:+UseCompressedStrings
{mapping, "search.solr.jvm_options", "yokozuna.solr_jvm_opts", [
  {default, "-d64 -Xms1g -Xmx1g -XX:+UseStringCache -XX:+UseCompressedOops"}
]}.

%% @doc The directory where Search's Active Anti-Entropy data files
%% are stored
{mapping, "search.anti_entropy.data_dir", "yokozuna.anti_entropy_data_dir", [
  {default, "$(platform_data_dir)/yz_anti_entropy"},
  {datatype, directory},
  hidden
]}.

%% @doc The root directory for Search, under which index data and
%% configuration is stored.
{mapping, "search.root_dir", "yokozuna.root_dir", [
  {default, "$(platform_data_dir)/yz"},
  {datatype, directory},
  hidden
]}.

%% @doc The temp directory for Search, under which the Solr webapp
%% will be expanded and other temp data stored.
{mapping, "search.temp_dir", "yokozuna.temp_dir", [
  {default, "$(platform_data_dir)/yz_temp"},
  {datatype, directory},
  hidden
]}.

%% @doc The timeout for ibrowse (ibrowse:send_req) requests to Solr endpoints.
%% Defaults to 60 seconds. It will always round up to the nearest second, e.g.
%% 1ms = 999 ms = 1s.
{mapping, "search.solr.request_timeout", "yokozuna.solr_request_timeout", [
  {default, "60s"},
  {datatype, {duration, ms}},
  hidden
]}.

%% @doc The timeout for ibrowse (ibrowse:send_req) requests to Solr's
%% entropy_data endpoints. Defaults to 60 seconds. It will always round up to the
%% nearest second, e.g. 1ms = 999 ms = 1s.
{mapping, "search.solr.ed_request_timeout", "yokozuna.solr_ed_request_timeout",
[
  {default, "60s"},
  {datatype, {duration, ms}},
  hidden
]}.

%% @doc To 'enable/disable' AAE for Search.
%%      * active: out-of-sync keys will be repaired in the background
%%      * passive: out-of-sync keys are only repaired on read
%%      * active-debug: like active, but outputs verbose debugging
%%        information
{mapping, "search.anti_entropy", "yokozuna.anti_entropy", [
  {datatype, {enum, [active, passive, 'active-debug']}},
  {default, active},
  hidden
]}.

{translation,
 "yokozuna.anti_entropy",
 fun(Conf) ->
    Setting = cuttlefish:conf_get("search.anti_entropy", Conf),
    case Setting of
      active -> {on, []};
      'active-debug' -> {on, [debug]};
      passive -> {off, []};
      _Default -> {on, []}
    end
  end
}.

%%===========================================================
%% Fuse-related settings
%%===========================================================

%% @doc The number of failures encountered while updating a search index within
%%      search.queue.error_threshold.failure_interval" before Riak will skip
%%      updates to that index.
{mapping, "search.index.error_threshold.failure_count",
"yokozuna.err_thresh_fail_count", [
  {default, 3},
  {datatype, integer},
  hidden,
  {validators, ["non_negative_integer"]}
]}.

%% @doc The window of time during which
%%      "search.queue.error_threshold.failure_count" failures will cause Riak
%%      to skip updates to a search index.
%%      If "search.queue.error_threshold.failure_count" errors have occurred
%%      within this interval on a given search index, then Riak will skip
%%      updates to that index until the
%%      "search.queue.error_threshold.reset_interval" has passed.
{mapping, "search.index.error_threshold.failure_interval",
"yokozuna.err_thresh_fail_interval", [
  {default, "5s"},
  {datatype, {duration, ms}},
  hidden
]}.

%% @doc The amount of time it takes for updates to a given search index to
%%      resume/refresh once Riak has started skipping update operations.
{mapping, "search.index.error_threshold.reset_interval",
"yokozuna.err_thresh_reset_interval", [
  {default, "30s"},
  {datatype, {duration, ms}},
  hidden
]}.

%% @doc Determines how fuse operator is called: sync or async.
{mapping, "search.fuse_context", "yokozuna.fuse_ctx", [
  {default, async},
  {datatype, {flag, {sync, sync}, {async, async_dirty}}},
  hidden
]}.

%%===========================================================
%% Batching-related mappings for SolrQ workers
%%===========================================================

%% @doc The minimum batch size, in number of Riak objects. Any batches that
%%      are smaller than this amount will not be immediately flushed to Solr,
%%      but are guaranteed to be flushed within the
%%      "search.queue.batch.flush_interval".
{mapping, "search.queue.batch.minimum", "yokozuna.solrq_batch_min", [
  {default, 1},
  {commented, 1},
  {datatype, integer},
  {validators, ["positive_integer"]}
]}.

%% @doc The maximum batch size, in number of Riak objects. Any batches that are
%%      larger than this amount will be split, where the first
%%      search.queue.batch.maximum set of objects will be flushed to Solr, and
%%      the remaining objects enqueued for that index will be retained until the
%%      next batch is delivered. This parameter ensures that at most
%%      "search.queue.batch.maximum object" will be delivered into Solr in any
%%      given request.
{mapping, "search.queue.batch.maximum", "yokozuna.solrq_batch_max", [
  {default, 100},
  {commented, 100},
  {datatype, integer},
  {validators, ["positive_integer"]}
]}.

%% @doc The maximum delay between notification to flush batches to Solr. This
%%      setting is used to increase or decrease the frequency of batch delivery
%%      into Solr, specifically for relatively low-volume input into Riak. This
%%      setting ensures that data will be delivered into Solr in accordance with
%%      the "search.queue.batch.minimum" and "search.queue.batch.maximum"
%%      settings within the specified interval. Batches that are smaller than
%%      "search.queue.batch.minimum" will be delivered to Solr within this
%%      interval. This setting will generally hav no effect on heavily loaded
%%      systems.
{mapping, "search.queue.batch.flush_interval",
 "yokozuna.solrq_batch_flush_interval", [
  {default, "1s"},
  {commented, "1s"},
  {datatype, [{duration, ms}, {atom, infinity}]}
]}.

%% @doc The queue high watermark. If the total number of queued messages in a
%%      Solr Queue Worker instance exceeds this limit, then the calling vnode
%%      will be blocked until the total number falls below this limit. This
%%      parameter exercises flow control between Riak and the Riak
%%      Search batching subsystem if writes into Solr start to fall behind.
{mapping, "search.queue.high_watermark", "yokozuna.solrq_hwm", [
  {default, 10},
  {commented, 10},
  {datatype, integer},
  {validators, ["non_negative_integer"]}
]}.

%% @doc The strategy for how we handle purging when we hit the
%%      search.queue.high_watermark.
%%      - purge_one -> Removes the oldest item on the queue from an
%%        erroring (references to fuses blown in the code) index in
%%        order to get below the search.queue.high_watermark.
%%      - purge_index -> Removes all items associated with one random
%%        erroring (references to fuses blown in the code) index in
%%        order to get below the search.queue.high_watermark.
%%      - purge_all -> Removes all items associated with all
%%        erroring (references to fuses blown in the code) indices in
%%        order to get below the search.queue.high_watermark.
%%      - off -> purging is disabled
{mapping, "search.queue.high_watermark.purge_strategy",
 "yokozuna.solrq_hwm_purge_strategy", [
  {default, purge_one},
  {commented, purge_one},
  {datatype, {enum, [purge_one, purge_index, purge_all, off]}}
]}.

%% @doc The number of solr queue workers to instantiate in the Riak
%%      Search application. Solr queue workers are responsible for enqueuing
%%      objects for insertion or update into Solr. Increasing the number of
%%      solrq distributes the queuing of objects, and can lead to greater
%%      throughput under high load, potentially at the expense of smaller batch
%%      sizes.
{mapping, "search.queue.worker_count", "yokozuna.solrq_worker_count", [
  {default, 10},
  {commented, 10},
  {datatype, integer},
  {validators, ["positive_integer"]}
]}.

%% @doc The number of solr queue helpers to instantiate in the Riak
%%      Search application. Solr queue helpers are responsible for delivering
%%      batches of data into Solr. Increasing the number of solrq helpers will
%%      increase concurrent writes into Solr.
{mapping, "search.queue.helper_count", "yokozuna.solrq_helper_count", [
  {default, 10},
  {commented, 10},
  {datatype, integer},
  {validators, ["positive_integer"]}
]}.

%% @doc The amount of time to wait before a drain operation times out.
%%      If a drain times out during an AAE exchange, the exchange is cancelled
%%      and retried at a later time.
{mapping, "search.queue.drain.timeout", "yokozuna.solrq_drain_timeout", [
  {default, "1m"},
  {commented, "1m"},
  {datatype, {duration, ms}},
  hidden
]}.

%% @doc The amount of time to wait before a drain cancel times out.
%%      If a drain cancel times out during an AAE exchange, the entity
%%      responsible for draining is forcibly terminated, and the exchange
%%      is cancelled and retried at a later time.
{mapping, "search.queue.drain.cancel.timeout", "yokozuna.solrq_drain_cancel_timeout", [
  {default, "5s"},
  {commented, "5s"},
  {datatype, {duration, ms}},
  hidden
]}.

%% @doc When enabled, enqueued Riak objects are drained prior to an AAE
%%      exchange, in order to minimize AAE activity, and during shutdown.
%%      If AAE is disabled, this setting only has an effect on shutdown
%%      behavior. Enabling draining may introduce blocking of put requests
%%      while the drain is happening, but can reduce AAE repairs when the 
%%      High Water Mark is set higher than the default.
{mapping, "search.queue.drain.enable", "yokozuna.solrq_drain_enable", [
  {default, off},
  {commented, off},
  {datatype, flag},
  hidden
]}.

%% @doc The value to use for the `max_sessions' configuration for the ibrowse
%% process used by Yokozuna.
{mapping, "search.ibrowse_max_sessions", "yokozuna.ibrowse_max_sessions",
 [{default, 100},
  {datatype, integer},
  hidden,
  {validators, ["positive_integer"]}]}.

%% @doc The value to use for the `max_pipeline_size' configuration for the
%% ibrowse process used by Yokozuna.
{mapping, "search.ibrowse_max_pipeline_size", "yokozuna.ibrowse_max_pipeline_size",
 [{default, 1},
  {datatype, integer},
  hidden,
  {validators, ["positive_integer"]}]}.

%%===========================================================
%% Validators
%%===========================================================

{validator, "positive_integer", "must be a positive integer > 0",
  fun(X) -> X > 0 end}.

{validator, "non_negative_integer", "must be an integer >= 0",
  fun(X) -> X >= 0 end}.
